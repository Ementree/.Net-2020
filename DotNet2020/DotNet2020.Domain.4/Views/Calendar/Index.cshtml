@using Kendo.Mvc.UI
@using DotNet2020.Domain.Models.ModelView
@model IndexViewModel

@{
    ViewData["Title"] = "Calendar";
}

    <script id="task-template" type="text/x-kendo-template">
            <div style="background-color: #: kendo.toString(ColorId) #; height: 100%">
                <div class="k-event-template k-event-time">12:00 AM - 12:00 AM</div>
                <div class="k-event-template"> </div>
            </div>
    </script>

    <script id="my-holiday" type="text/x-kendo-template">
        <div style='background:#=getColorBasedOnHour(date)#; height: 100%;width: 100%;'></div>
    </script>

<link rel="stylesheet" href="~/css/calendar.css">
<div class="container">

    <div class="calendar">
        <h1>Календарь</h1>
        @(
    Html.Kendo().Scheduler<Kendo.Mvc.Examples.Models.Scheduler.CalendarEventViewModel>()
        .Name("calendar")
        .Date(DateTime.Now)
        .StartTime(new DateTime(DateTime.Now.Year, 1, 1))
        .MajorTick(1440)
        .Editable(false)
        .Height(600)
        .EventTemplateId("task-template")
        .Views(views =>
        {
            views.TimelineMonthView(view => view.SlotTemplateId("my-holiday"));
            views.TimelineWeekView(view => view.SlotTemplateId("my-holiday"));
            //views.DayView();
            views.AgendaView();
        })
        .BindTo(Model.Events)
        .Group(group => group.Resources("Titles").Orientation(SchedulerGroupOrientation.Vertical))
        .Resources(resource =>
        {
            resource.Add(m => m.UserEmail)
                .Title("Title")
                .Name("Titles")
                .Multiple(true)
                .DataTextField("Name")
                .DataValueField("Email")
                .DataColorField("Color")
                .BindTo(Model.Users);
        })
        .DataSource(d => d
            .Model(m =>
            {
                m.Id(f => f.Id);
                m.Field(f => f.Title).DefaultValue("No title");
            })
        )
            )
    </div>

    <h2 style="        margin-top: 40px
                                  ">Рекомендация для вас</h2>
    <div class="recommendations">
        <div class="block-rec">
            <div class="box">
                @if (ViewBag.Recommendation != null)
                {
                    <p>@ViewBag.Recommendation.RecommendationText</p>
                }
            </div>
        </div>
        <form asp-action="AddEvent" asp-controller="Calendar" method="get">
            <div class="vacation">
                <h2>У вас осталось 20 дней отпуска</h2>
                <button type="submit">Запросить новый отпуск</button>
            </div>
        </form>
    </div>
    <div class="last-vacation">
        @if (ViewBag.User != null && ViewBag.User.IsLastVacationApproved)
        {
            <h1>Ваш последний отпуск был согласован</h1>   
        }
        else if(ViewBag.User != null)
        {
            <h1>Ваш последний отпуск был отклонен</h1>
        }
    </div>
</div>

<style>
    .k-event, .k-task-complete {
        color: #fff;
        background: yellow;
        border-color: #24c6db;
    }
    .k-scheduler-dayview .k-today.k-nonwork-hour, .k-scheduler-table .k-nonwork-hour, .k-scheduler-timelineview .k-today.k-nonwork-hour {
        background-color: gray;
        opacity: .3;
    }
    .k-scheduler-table td, .k-scheduler-table th {
        padding: 0;
        opacity: .5;
    }
</style>

<script>

    async function getData(ajaxurl) {
        return await $.ajax({
            url: ajaxurl,
            type: 'GET',
        });
    };


    function getColorBasedOnHour(date) {
        const holidays = JSON.parse('@Html.Raw(Json.Serialize(@Model.Holidays))')

        console.log(holidays)
        var month = date.getUTCMonth() + 1;
        var day = date.getUTCDate() + 1;
        var year = date.getUTCFullYear();

        newdate = year + "/" + month + "/" + day;
        if (holidays.includes(newdate)) {
            console.log('holiday')
            console.log(newdate)
            return "red";
        }
    }
</script>